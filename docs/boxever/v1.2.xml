<definitions xmlns="http://www.omg.org/spec/DMN/20151101/dmn.xsd" xmlns:biodi="http://bpmn.io/schema/dmn/biodi/1.0" xmlns:camunda="http://camunda.org/schema/1.0/dmn" namespace="http://camunda.org/schema/1.0/dmn" name="definitions" id="definitions"><decision id="df70f672-8ccd-44a3-82f3-311c1e6fb492" name="Results"><extensionElements><biodi:bounds x="1800" y="1000" width="200" height="73.3"/><biodi:edge source="af25fb09-cdac-4697-8513-34b2cb3c7ce2"/></extensionElements><informationRequirement><requiredDecision href="#af25fb09-cdac-4697-8513-34b2cb3c7ce2"/></informationRequirement><decisionTable hitPolicy="FIRST"><input id="string0841919d-bda5-4dc0-a77c-c17f59c2f649" label="Page Name" camunda:inputVariable=""><inputExpression typeRef="string"><text>getPageViews.pageViewCount</text></inputExpression></input><output id="string41229b04-f9e1-4ae5-b7e6-974a18f12881" label="PageViewCount" name="outputCTAURL" typeRef="string"/><rule id="Results_0"><inputEntry id="inputf97486b0-0c74-4032-94dc-5b3d19f2c866"><text><![CDATA["getPageViews.pageName"]]></text></inputEntry><outputEntry id="output732a87ca-8333-4445-b7f3-860ff35e04b6"><text><![CDATA[]]></text></outputEntry></rule></decisionTable></decision><inputData id="f0126605-6052-4c00-9f94-4cac0769f46e" name="Guest"><extensionElements><biodi:bounds x="1800" y="1410" width="200" height="73.3"/></extensionElements></inputData><decision id="af25fb09-cdac-4697-8513-34b2cb3c7ce2" name="GetPageViews"><extensionElements><biodi:bounds x="1800" y="1200" width="200" height="73.3"/><biodi:edge source="f0126605-6052-4c00-9f94-4cac0769f46e"/></extensionElements><variable id="variable6352a3ed-b754-4b57-984d-6e1960724cc7" typeRef="map" name="getPageViews"/><informationRequirement><requiredInput href="#f0126605-6052-4c00-9f94-4cac0769f46e"/></informationRequirement><literalExpression id="literal6352a3ed-b754-4b57-984d-6e1960724cc7" expressionLanguage="javascript"><text><![CDATA[(function () { var daysToAgeOutSession = "[[Number of days to include in page view calculations | Number]]"; var page = "[[Page Name | String]]"; var pageCount = 0;  //function to get the view events from guests session exluding any before the date and increment the page counters. function getPageFrequencies() { //date to exclude sessions before var ageOutSessionsDate = new Date(new Date().setDate(new Date().getDate() - daysToAgeOutSession));  for (var i = 0; i < guest.sessions.length; i++) { var currentSession = guest.sessions[i]; if (Date.parse(currentSession.createdAt) < ageOutSessionsDate) { break; } for (var j = 0; j < currentSession.events.length; j++) { var currentEvent = currentSession.events[j]; // If current page view is equal to the page to check increment counter if (currentEvent.type === "VIEW" && currentEvent.arbitraryData){ if (currentEvent.arbitraryData.page == page) { pageCount++; } } } } }  getPageFrequencies(); const decision = pageCount > 0 ? "1" : "0"; return { binaryDecision:decision };})();]]></text></literalExpression></decision></definitions>